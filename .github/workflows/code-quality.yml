name: Code Quality

on:
  push:
    branches: ['main', 'develop']
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.vscode/**'
  pull_request:
    branches: ['main', 'develop']
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.vscode/**'

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Para clonaci√≥n completa del repositorio (necesario para SonarCloud)

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: |
          poetry install --no-interaction

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Check format with Black
        id: black
        run: |
          poetry run black --check app tests || echo "::set-output name=has_errors::true"

      - name: Lint with Flake8
        id: flake8
        run: |
          poetry run flake8 app tests || echo "::set-output name=has_errors::true"

      - name: Check imports with isort
        id: isort
        run: |
          poetry run isort --check-only app tests || echo "::set-output name=has_errors::true"

      - name: Type check with mypy
        id: mypy
        run: |
          poetry run mypy app tests || echo "::set-output name=has_errors::true"

      - name: Security check with Bandit
        id: bandit
        run: |
          poetry run bandit -r app -x tests || echo "::set-output name=has_errors::true"

      - name: Analyze code complexity
        id: complexity
        run: |
          poetry run python -m mccabe --min 10 app/**/*.py || echo "::set-output name=has_errors::true"
